#!/usr/bin/env python3
"""
Ph√¢n t√≠ch c·ª• th·ªÉ c·∫•u tr√∫c company_data s·∫Ω tr·∫£ v·ªÅ
Detailed analysis of company_data structure returned by the system
"""

# ====================================================================================
# üìä PH√ÇN T√çCH COMPANY_DATA STRUCTURE
# ====================================================================================

company_data_examples = {
    "search_results_raw": [
        {
            "chunk_id": "aia_001",
            "score": 0.95,
            "original_score": 0.85,
            "search_source": "comprehensive_hybrid_search",
            "content_for_rag": "ƒêi·ªÅu h√≤a Daikin 2 chi·ªÅu 18000 BTU v·ªõi c√¥ng ngh·ªá inverter ti·∫øt ki·ªám ƒëi·ªán, kh·ª≠ khu·∫©n nano titanium. Gi√° b√°n: 15.500.000 VNƒê. B·∫£o h√†nh 3 nƒÉm ch√≠nh h√£ng.",
            "data_type": "products",
            "content_type": "extracted_product",  # QUAN TR·ªåNG: Trigger t·ªëi ∆∞u
            "structured_data": {
                # CH·ªà 2 FIELDS cho extracted_product/extracted_service
                "product_id": "DAIKIN_AC_18K_INV",
                "retrieval_context": "ƒêi·ªÅu h√≤a Daikin 2 chi·ªÅu 18000 BTU v·ªõi c√¥ng ngh·ªá inverter ti·∫øt ki·ªám ƒëi·ªán, kh·ª≠ khu·∫©n nano titanium. Gi√° b√°n: 15.500.000 VNƒê. B·∫£o h√†nh 3 nƒÉm ch√≠nh h√£ng.",
                # KH√îNG C√ì: price, description, features, specifications, etc.
            },
            "file_id": "products_catalog_2025.pdf",
            "language": "vi",
            "created_at": "2025-08-15T10:30:00Z",
            "categories": [],  # Empty ƒë·ªÉ ti·∫øt ki·ªám space
            "tags": [],  # Empty ƒë·ªÉ ti·∫øt ki·ªám space
        },
        {
            "chunk_id": "aia_002",
            "score": 0.88,
            "original_score": 0.82,
            "search_source": "vector_search",
            "content_for_rag": "C√¥ng ty AIA chuy√™n cung c·∫•p c√°c s·∫£n ph·∫©m ƒëi·ªán l·∫°nh ch·∫•t l∆∞·ª£ng cao. Th√†nh l·∫≠p nƒÉm 2010, c√≥ showroom t·∫°i TP.HCM v√† H√† N·ªôi. Hotline: 1900-xxx-xxx",
            "data_type": "company_info",
            "content_type": "company_profile",  # KH√îNG ph·∫£i product/service
            "structured_data": {
                # FULL DATA cho content kh√°c
                "company_name": "AIA Electronics",
                "founded_year": 2010,
                "locations": ["TP.HCM", "H√† N·ªôi"],
                "phone": "1900-xxx-xxx",
                "specialization": "ƒëi·ªán l·∫°nh",
                "description": "chuy√™n cung c·∫•p c√°c s·∫£n ph·∫©m ƒëi·ªán l·∫°nh ch·∫•t l∆∞·ª£ng cao",
                "business_type": "retail",
                "certifications": ["ISO 9001", "ƒê·∫°i l√Ω ch√≠nh h√£ng"],
                "services": ["b·∫£o h√†nh", "l·∫Øp ƒë·∫∑t", "s·ª≠a ch·ªØa"],
            },
            "file_id": "company_profile.pdf",
            "language": "vi",
            "created_at": "2025-08-10T14:20:00Z",
            "categories": ["company_info", "profile"],
            "tags": ["ƒëi·ªán l·∫°nh", "AIA", "showroom"],
        },
        {
            "chunk_id": "aia_003",
            "score": 0.75,
            "original_score": 0.70,
            "search_source": "scroll_search",
            "content_for_rag": "D·ªãch v·ª• l·∫Øp ƒë·∫∑t ƒëi·ªÅu h√≤a t·∫≠n nh√† trong ng√†y, b·∫£o h√†nh 2 nƒÉm. ƒê·ªôi ng≈© k·ªπ thu·∫≠t vi√™n chuy√™n nghi·ªáp v·ªõi kinh nghi·ªám 10+ nƒÉm.",
            "data_type": "services",
            "content_type": "extracted_service",  # QUAN TR·ªåNG: Trigger t·ªëi ∆∞u
            "structured_data": {
                # CH·ªà 2 FIELDS cho extracted_service
                "product_id": "INSTALL_SERVICE_AC",
                "retrieval_context": "D·ªãch v·ª• l·∫Øp ƒë·∫∑t ƒëi·ªÅu h√≤a t·∫≠n nh√† trong ng√†y, b·∫£o h√†nh 2 nƒÉm. ƒê·ªôi ng≈© k·ªπ thu·∫≠t vi√™n chuy√™n nghi·ªáp v·ªõi kinh nghi·ªám 10+ nƒÉm.",
                # KH√îNG C√ì: service_details, pricing_tiers, staff_info, etc.
            },
            "file_id": "services_catalog.pdf",
            "language": "vi",
            "created_at": "2025-08-12T09:15:00Z",
            "categories": [],  # Empty ƒë·ªÉ ti·∫øt ki·ªám space
            "tags": [],  # Empty ƒë·ªÉ ti·∫øt ki·ªám space
        },
    ],
    "formatted_company_data_output": """[D·ªÆ LI·ªÜU M√î T·∫¢ T·ª™ T√ÄI LI·ªÜU]
[PRODUCTS] ƒêi·ªÅu h√≤a Daikin 2 chi·ªÅu 18000 BTU v·ªõi c√¥ng ngh·ªá inverter ti·∫øt ki·ªám ƒëi·ªán, kh·ª≠ khu·∫©n nano titanium. Gi√° b√°n: 15.500.000 VNƒê. B·∫£o h√†nh 3 nƒÉm ch√≠nh h√£ng.

[COMPANY_INFO] C√¥ng ty AIA chuy√™n cung c·∫•p c√°c s·∫£n ph·∫©m ƒëi·ªán l·∫°nh ch·∫•t l∆∞·ª£ng cao. Th√†nh l·∫≠p nƒÉm 2010, c√≥ showroom t·∫°i TP.HCM v√† H√† N·ªôi. Hotline: 1900-xxx-xxx

[SERVICES] D·ªãch v·ª• l·∫Øp ƒë·∫∑t ƒëi·ªÅu h√≤a t·∫≠n nh√† trong ng√†y, b·∫£o h√†nh 2 nƒÉm. ƒê·ªôi ng≈© k·ªπ thu·∫≠t vi√™n chuy√™n nghi·ªáp v·ªõi kinh nghi·ªám 10+ nƒÉm.""",
}

# ====================================================================================
# üéØ T·ªêI ·ª¶U H√ìA D·ª∞A TR√äN CONTENT_TYPE
# ====================================================================================

optimization_analysis = {
    "before_optimization": {
        "extracted_product_data": {
            "chunk_id": "aia_001",
            "structured_data": {
                "product_id": "DAIKIN_AC_18K_INV",
                "name": "ƒêi·ªÅu h√≤a Daikin 2 chi·ªÅu 18000 BTU",
                "price": 15500000,
                "currency": "VND",
                "description": "V·ªõi c√¥ng ngh·ªá inverter ti·∫øt ki·ªám ƒëi·ªán",
                "features": ["inverter", "2 chi·ªÅu", "kh·ª≠ khu·∫©n nano titanium"],
                "specifications": {
                    "capacity": "18000 BTU",
                    "type": "2 chi·ªÅu",
                    "brand": "Daikin",
                    "energy_efficiency": "5 sao",
                },
                "warranty": "3 nƒÉm ch√≠nh h√£ng",
                "availability": "C√≥ s·∫µn",
                "category": "ƒêi·ªÅu h√≤a",
                "tags": ["inverter", "ti·∫øt ki·ªám ƒëi·ªán", "daikin"],
                "images": ["daikin_ac_001.jpg"],
                "installation_service": True,
                "promotion": "Gi·∫£m 10% cho kh√°ch VIP",
                "retrieval_context": "ƒêi·ªÅu h√≤a Daikin 2 chi·ªÅu 18000 BTU v·ªõi c√¥ng ngh·ªá inverter ti·∫øt ki·ªám ƒëi·ªán, kh·ª≠ khu·∫©n nano titanium. Gi√° b√°n: 15.500.000 VNƒê. B·∫£o h√†nh 3 nƒÉm ch√≠nh h√£ng.",
            },
        },
        "data_size": "~1.2KB per product chunk",
    },
    "after_optimization": {
        "extracted_product_data": {
            "chunk_id": "aia_001",
            "structured_data": {
                # CH·ªà C√ìN 2 FIELDS THI·∫æT Y·∫æU
                "product_id": "DAIKIN_AC_18K_INV",
                "retrieval_context": "ƒêi·ªÅu h√≤a Daikin 2 chi·ªÅu 18000 BTU v·ªõi c√¥ng ngh·ªá inverter ti·∫øt ki·ªám ƒëi·ªán, kh·ª≠ khu·∫©n nano titanium. Gi√° b√°n: 15.500.000 VNƒê. B·∫£o h√†nh 3 nƒÉm ch√≠nh h√£ng.",
            },
        },
        "data_size": "~300B per product chunk",
        "space_saved": "75% reduction",
    },
}

# ====================================================================================
# üìà LU·ªíNG X·ª¨ L√ù COMPANY_DATA
# ====================================================================================

processing_flow = {
    "step_1_search": {
        "function": "_hybrid_search_company_data_optimized()",
        "input": {"company_id": "aia", "query": "ƒëi·ªÅu h√≤a daikin"},
        "qdrant_search": {
            "method": "comprehensive_hybrid_search()",
            "filters": {
                "company_id": "aia",
                "industry": "other",
                "score_threshold": 0.1,
            },
        },
    },
    "step_2_optimization": {
        "location": "qdrant_company_service.py:958-995",
        "logic": """
        if content_type in ["extracted_product", "extracted_service"]:
            # T·ªêI ·ª¶U: CH·ªà L·∫§Y 2 FIELDS
            structured_data = {
                "product_id": product_id,
                "retrieval_context": retrieval_context
            }
        else:
            # ƒê·∫¶Y ƒê·ª¶: Gi·ªØ nguy√™n t·∫•t c·∫£ fields
            structured_data = payload.get("structured_data", {})
        """,
    },
    "step_3_formatting": {
        "location": "unified_chat_service.py:2196-2202",
        "format": """
        formatted_results.append(f"[{data_type.upper()}] {content.strip()}")

        result_text = "[D·ªÆ LI·ªÜU M√î T·∫¢ T·ª™ T√ÄI LI·ªÜU]\\n" + "\\n\\n".join(formatted_results)
        """,
    },
    "step_4_prompt_injection": {
        "location": "unified_chat_service.py:664",
        "usage": """
        response = await self._build_unified_prompt_with_intent(
            company_data=company_data,  # <- String ƒë√£ format
            user_context=user_context,
            company_context=company_context,
            products_list=products_list
        )
        """,
    },
}

# ====================================================================================
# üí° V√ç D·ª§ TH·ª∞C T·∫æ COMPANY_DATA OUTPUT
# ====================================================================================

real_example = {
    "user_query": "T√¥i mu·ªën mua ƒëi·ªÅu h√≤a Daikin 2 chi·ªÅu",
    "company_data_returned": """[D·ªÆ LI·ªÜU M√î T·∫¢ T·ª™ T√ÄI LI·ªÜU]
[PRODUCTS] ƒêi·ªÅu h√≤a Daikin 2 chi·ªÅu 18000 BTU v·ªõi c√¥ng ngh·ªá inverter ti·∫øt ki·ªám ƒëi·ªán, kh·ª≠ khu·∫©n nano titanium. Gi√° b√°n: 15.500.000 VNƒê. B·∫£o h√†nh 3 nƒÉm ch√≠nh h√£ng.

[PRODUCTS] ƒêi·ªÅu h√≤a Daikin 1 chi·ªÅu 12000 BTU ti·∫øt ki·ªám ƒëi·ªán, c√≥ remote th√¥ng minh. Gi√° b√°n: 8.900.000 VNƒê. T·∫∑ng k√®m d·ªãch v·ª• l·∫Øp ƒë·∫∑t mi·ªÖn ph√≠.

[SERVICES] D·ªãch v·ª• l·∫Øp ƒë·∫∑t ƒëi·ªÅu h√≤a t·∫≠n nh√† trong ng√†y, b·∫£o h√†nh 2 nƒÉm. ƒê·ªôi ng≈© k·ªπ thu·∫≠t vi√™n chuy√™n nghi·ªáp v·ªõi kinh nghi·ªám 10+ nƒÉm.

[COMPANY_INFO] C√¥ng ty AIA chuy√™n cung c·∫•p c√°c s·∫£n ph·∫©m ƒëi·ªán l·∫°nh ch·∫•t l∆∞·ª£ng cao. Th√†nh l·∫≠p nƒÉm 2010, c√≥ showroom t·∫°i TP.HCM v√† H√† N·ªôi. Hotline: 1900-xxx-xxx

[PRODUCTS] M√°y l·∫°nh trung t√¢m Daikin VRV cho vƒÉn ph√≤ng, c√¥ng su·∫•t t·ª´ 2HP ƒë·∫øn 20HP. Ti·∫øt ki·ªám 40% ƒëi·ªán nƒÉng so v·ªõi m√°y th∆∞·ªùng. Li√™n h·ªá ƒë·ªÉ b√°o gi√° chi ti·∫øt.

[SERVICES] B·∫£o tr√¨ ƒëi·ªÅu h√≤a ƒë·ªãnh k·ª≥ 6 th√°ng/l·∫ßn, v·ªá sinh m√°y l·∫°nh chuy√™n s√¢u. ∆Øu ƒë√£i 20% cho kh√°ch h√†ng th√¢n thi·∫øt. ƒê·ªôi ng≈© c√≥ ch·ª©ng ch·ªâ Daikin.""",
    "key_benefits": [
        "üéØ Products/Services: Ch·ªâ product_id + retrieval_context (75% space saved)",
        "üìÑ Other content: Full structured_data preserved",
        "üîç RAG quality: Retrieval_context optimized cho AI chat",
        "‚ö° Performance: Gi·∫£m data transfer v√† prompt size",
        "üìä Scalability: H·ªá th·ªëng scale t·ªët v·ªõi database l·ªõn",
    ],
}

if __name__ == "__main__":
    print("üîç PH√ÇN T√çCH COMPANY_DATA STRUCTURE")
    print("=" * 80)

    print("\nüìä 1. RAW SEARCH RESULTS (t·ª´ Qdrant):")
    print("-" * 50)
    for i, result in enumerate(company_data_examples["search_results_raw"], 1):
        print(f"\n{i}. Chunk: {result['chunk_id']}")
        print(f"   Content Type: {result['content_type']}")
        print(f"   Score: {result['score']}")

        if result["content_type"] in ["extracted_product", "extracted_service"]:
            print("   üéØ OPTIMIZED - Structured Data:")
            for key, value in result["structured_data"].items():
                print(f"      {key}: {str(value)[:60]}...")
        else:
            print("   üìÑ FULL DATA - Structured Data:")
            structured_keys = list(result["structured_data"].keys())
            print(f"      Keys: {structured_keys[:5]}...")
            print(f"      Total fields: {len(result['structured_data'])}")

    print("\nüìù 2. FORMATTED COMPANY_DATA (g·ª≠i cho AI):")
    print("-" * 50)
    print(company_data_examples["formatted_company_data_output"])

    print("\nüí° 3. T·ªêI ·ª¶U H√ìA HI·ªÜU QU·∫¢:")
    print("-" * 50)
    before = optimization_analysis["before_optimization"]
    after = optimization_analysis["after_optimization"]

    print(f"   Before: {before['data_size']}")
    print(f"   After:  {after['data_size']}")
    print(f"   Saved:  {after['space_saved']}")

    print(f"\nüéØ 4. KEY BENEFITS:")
    print("-" * 50)
    for benefit in real_example["key_benefits"]:
        print(f"   {benefit}")

    print(f"\n‚úÖ Company_data l√† string ƒë√£ format s·∫µn cho AI prompt!")
    print(f"   Kh√¥ng ph·∫£i raw JSON, m√† l√† text d·ªÖ ƒë·ªçc v·ªõi [LABELS]")

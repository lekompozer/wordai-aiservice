# WordAI Nginx Configuration for ai.wordai.pro
# HTTP only - before SSL certificate setup

server {
    listen 80;
    server_name ai.wordai.pro;

    # Let's Encrypt challenge location (for future SSL setup)
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Security headers (basic)
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # CORS configuration for WordAI domain
    set $cors_origin "";
    if ($http_origin ~* "^(http://localhost:8001|http://localhost:3002|http://localhost:3000|https://ai\.wordai\.pro|https://wordai\.pro|https://www\.wordai\.pro|https://api\.wordai\.pro|https://static\.wordai\.pro)$") {
        set $cors_origin $http_origin;
    }

    # Main API proxy
    location / {
        # CORS headers
        add_header 'Access-Control-Allow-Origin' $cors_origin;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Internal-Key,X-Webhook-Source,X-Webhook-Secret,X-Plugin-Id,X-Company-Id';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        add_header 'Access-Control-Allow-Credentials' 'true';

        # Handle OPTIONS preflight
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Internal-Key,X-Webhook-Source,X-Webhook-Secret,X-Plugin-Id,X-Company-Id' always;
            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }

        # Proxy to FastAPI application
        proxy_pass http://127.0.0.1:8000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Origin $http_origin;
        proxy_set_header X-Internal-Key $http_x_internal_key;

        # Timeouts
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;

        # For streaming responses
        proxy_buffering off;
    }

    # Logs
    access_log /var/log/nginx/ai.wordai.pro.access.log;
    error_log /var/log/nginx/ai.wordai.pro.error.log;
}